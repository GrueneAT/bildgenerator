# Build Testing Workflow
name: Build Test

on:
  # Test builds on pull requests
  pull_request:
    branches: ["main", "develop"]
    paths:
      - 'resources/js/**'
      - 'resources/css/**'
      - 'scripts/build*.js'
      - 'package*.json'
      - 'tailwind.config.js'
      - 'postcss.config.js'
  
  # Test builds on pushes to develop branch
  push:
    branches: ["develop"]
    paths:
      - 'resources/js/**'
      - 'resources/css/**'
      - 'scripts/build*.js'
      - 'package*.json'
      - 'tailwind.config.js'
      - 'postcss.config.js'

permissions:
  contents: read
  pull-requests: write  # For build size comments

jobs:
  test-build:
    name: Test Production Build
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          
      - name: Setup Python for logo processing
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"
          
      - name: Install dependencies
        run: npm ci
        
      - name: Lint build scripts
        run: |
          echo "🔍 Checking build script syntax..."
          node -c scripts/build.js
          node -c scripts/build-js.js
          node -c scripts/build-css.js
          echo "✅ Build scripts syntax OK"
          
      - name: Test individual build components
        run: |
          echo "🧪 Testing individual build components..."
          
          # Test CSS build
          echo "Testing CSS build..."
          npm run build:css
          if [ ! -f "build/app.min.css" ]; then
            echo "❌ CSS build failed - app.min.css not created"
            exit 1
          fi
          echo "✅ CSS build successful"
          
          # Test JavaScript build
          echo "Testing JavaScript build..."
          npm run build:js
          if [ ! -f "build/app.min.js" ]; then
            echo "❌ JavaScript build failed - app.min.js not created"
            exit 1
          fi
          echo "✅ JavaScript build successful"
          
      - name: Test full production build
        run: |
          echo "🏗️ Testing full production build..."
          npm run build
          
          # Verify all expected files exist
          echo "Verifying build output..."
          required_files=(
            "build/index.html"
            "build/app.min.js"
            "build/app.min.css"
            "build/app.min.js.map"
            "build/app.min.css.map"
          )
          
          for file in "${required_files[@]}"; do
            if [ ! -f "$file" ]; then
              echo "❌ Required file missing: $file"
              exit 1
            fi
            echo "✅ Found: $file"
          done
          
      - name: Analyze build output
        id: analyze
        run: |
          echo "📊 Analyzing build output..."
          
          # Get file sizes
          JS_SIZE=$(stat -c%s "build/app.min.js")
          CSS_SIZE=$(stat -c%s "build/app.min.css")
          HTML_SIZE=$(stat -c%s "build/index.html")
          TOTAL_SIZE=$(du -sb build/ | cut -f1)
          
          # Convert to human readable
          JS_SIZE_HR=$(du -h "build/app.min.js" | cut -f1)
          CSS_SIZE_HR=$(du -h "build/app.min.css" | cut -f1)
          HTML_SIZE_HR=$(du -h "build/index.html" | cut -f1)
          TOTAL_SIZE_HR=$(du -sh build/ | cut -f1)
          
          echo "js_size=$JS_SIZE" >> $GITHUB_OUTPUT
          echo "css_size=$CSS_SIZE" >> $GITHUB_OUTPUT
          echo "html_size=$HTML_SIZE" >> $GITHUB_OUTPUT
          echo "total_size=$TOTAL_SIZE" >> $GITHUB_OUTPUT
          echo "js_size_hr=$JS_SIZE_HR" >> $GITHUB_OUTPUT
          echo "css_size_hr=$CSS_SIZE_HR" >> $GITHUB_OUTPUT
          echo "html_size_hr=$HTML_SIZE_HR" >> $GITHUB_OUTPUT
          echo "total_size_hr=$TOTAL_SIZE_HR" >> $GITHUB_OUTPUT
          
          # Check if sizes are reasonable (not too large)
          MAX_JS_SIZE=100000    # 100KB
          MAX_CSS_SIZE=50000    # 50KB
          MAX_TOTAL_SIZE=5000000 # 5MB
          
          if [ $JS_SIZE -gt $MAX_JS_SIZE ]; then
            echo "⚠️ JavaScript bundle size ($JS_SIZE_HR) exceeds recommended maximum"
          fi
          
          if [ $CSS_SIZE -gt $MAX_CSS_SIZE ]; then
            echo "⚠️ CSS bundle size ($CSS_SIZE_HR) exceeds recommended maximum"
          fi
          
          if [ $TOTAL_SIZE -gt $MAX_TOTAL_SIZE ]; then
            echo "⚠️ Total build size ($TOTAL_SIZE_HR) exceeds recommended maximum"
          fi
          
      - name: Test build functionality
        run: |
          echo "🧪 Testing build functionality..."
          
          # Check that HTML references the correct bundles
          if ! grep -q "app.min.css" build/index.html; then
            echo "❌ HTML doesn't reference CSS bundle"
            exit 1
          fi
          
          if ! grep -q "app.min.js" build/index.html; then
            echo "❌ HTML doesn't reference JS bundle"
            exit 1
          fi
          
          # Check for cache busting
          if ! grep -q "app.min.css?v=" build/index.html; then
            echo "❌ CSS bundle doesn't have cache busting"
            exit 1
          fi
          
          if ! grep -q "app.min.js?v=" build/index.html; then
            echo "❌ JS bundle doesn't have cache busting"
            exit 1
          fi
          
          echo "✅ Build functionality tests passed"
          
      - name: Comment build size on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            // Find existing build size comment
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('📊 Build Size Report')
            );
            
            const buildReport = `## 📊 Build Size Report
            
            | File | Size |
            |------|------|
            | JavaScript Bundle | ${{ steps.analyze.outputs.js_size_hr }} |
            | CSS Bundle | ${{ steps.analyze.outputs.css_size_hr }} |
            | HTML | ${{ steps.analyze.outputs.html_size_hr }} |
            | **Total Build** | **${{ steps.analyze.outputs.total_size_hr }}** |
            
            ### Bundle Analysis
            - ✅ JavaScript bundle created successfully
            - ✅ CSS bundle created successfully  
            - ✅ Source maps generated
            - ✅ Cache busting enabled
            - ✅ Production HTML generated
            
            <details>
            <summary>View detailed build output</summary>
            
            **Build completed successfully** ✅
            
            All required files are present and properly referenced in the HTML.
            The build is ready for production deployment.
            
            </details>
            
            ---
            *This comment was automatically generated by the build test workflow.*`;
            
            if (botComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: buildReport
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: buildReport
              });
            }
            
      - name: Upload build artifacts for review
        uses: actions/upload-artifact@v4
        with:
          name: build-test-${{ github.event.pull_request.number || github.run_number }}
          path: build/
          retention-days: 7