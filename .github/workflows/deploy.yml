name: Deploy to Production

on:
  push:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      run: npm test
    
    - name: Run tests with coverage
      run: npm run test:coverage
    
    - name: Build CSS
      run: npm run build-css-prod
    
    - name: Check for build artifacts
      run: |
        if [ ! -f "resources/css/output.css" ]; then
          echo "CSS build failed - output.css not found"
          exit 1
        fi
        echo "Build successful - output.css generated"

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build production assets
      run: npm run build-css-prod
    
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./
        exclude_assets: |
          node_modules/
          tests/
          coverage/
          .github/
          package*.json
          jest.config.js
          tailwind.config.js
        commit_message: 'Deploy: ${{ github.event.head_commit.message }}'
        enable_jekyll: false
        cname: your-domain.com  # Replace with your actual domain or remove this line