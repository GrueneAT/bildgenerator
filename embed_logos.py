#!/usr/bin/env python3
"""
Script to embed logo JSON data directly into HTML files for faster loading.
This eliminates the need for a separate AJAX request to load logo data.
"""

import json
import sys
import os
import re
from pathlib import Path

def embed_logos_in_html(input_file, output_file):
    """
    Embed logo JSON data into HTML file as inline JavaScript.
    
    Args:
        input_file: Path to source HTML file
        output_file: Path to output HTML file with embedded logos
    """
    
    # Read logo JSON data
    logo_json_path = 'resources/images/logos/index.json'
    
    if not os.path.exists(logo_json_path):
        print(f"Error: Logo JSON file not found at {logo_json_path}", file=sys.stderr)
        sys.exit(1)
    
    try:
        with open(logo_json_path, 'r', encoding='utf-8') as f:
            logo_data = json.load(f)
    except json.JSONDecodeError as e:
        print(f"Error: Invalid JSON in {logo_json_path}: {e}", file=sys.stderr)
        sys.exit(1)
    
    # Read HTML template
    if not os.path.exists(input_file):
        print(f"Error: Input HTML file not found at {input_file}", file=sys.stderr)
        sys.exit(1)
    
    with open(input_file, 'r', encoding='utf-8') as f:
        html_content = f.read()
    
    # Create inline script with embedded logo data
    # Use JSON.stringify equivalent with proper escaping
    logo_script = f"""    <script>
      // Embedded logo data for faster loading (generated by embed_logos.py)
      window.EMBEDDED_LOGO_DATA = {json.dumps(logo_data, ensure_ascii=False, indent=6)};
    </script>"""
    
    # Insert before closing </head> tag
    if '</head>' not in html_content:
        print("Error: Could not find </head> tag in HTML file", file=sys.stderr)
        sys.exit(1)
    
    # Remove any existing embedded logo data first
    html_content = re.sub(
        r'\s*<script>\s*// Embedded logo data.*?window\.EMBEDDED_LOGO_DATA = .*?;\s*</script>',
        '',
        html_content,
        flags=re.DOTALL
    )
    
    # Insert the new embedded data
    html_content = html_content.replace('</head>', f'{logo_script}\n  </head>')
    
    # Write output file
    try:
        # Ensure output directory exists
        output_dir = os.path.dirname(output_file)
        if output_dir and not os.path.exists(output_dir):
            os.makedirs(output_dir)
            
        with open(output_file, 'w', encoding='utf-8') as f:
            f.write(html_content)
        
        print(f"Successfully embedded logo data into {output_file}")
        
        # Show size comparison
        input_size = os.path.getsize(input_file)
        output_size = os.path.getsize(output_file)
        logo_size = os.path.getsize(logo_json_path)
        
        print(f"  Original HTML: {input_size:,} bytes")
        print(f"  Logo JSON: {logo_size:,} bytes") 
        print(f"  Final HTML: {output_size:,} bytes (+{output_size - input_size:,} bytes)")
        
    except IOError as e:
        print(f"Error writing output file {output_file}: {e}", file=sys.stderr)
        sys.exit(1)

def main():
    if len(sys.argv) != 3:
        print("Usage: python3 embed_logos.py <input_html> <output_html>")
        print("Example: python3 embed_logos.py index.html index-with-logos.html")
        sys.exit(1)
    
    input_file = sys.argv[1]
    output_file = sys.argv[2]
    
    embed_logos_in_html(input_file, output_file)

if __name__ == '__main__':
    main()